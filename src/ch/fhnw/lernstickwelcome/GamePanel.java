package ch.fhnw.lernstickwelcome;

import java.awt.Color;
import java.text.MessageFormat;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JPanel;
import javax.swing.UIDefaults;
import javax.swing.UIManager;

public class GamePanel extends JPanel {

    private static final Logger LOGGER =
            Logger.getLogger(GamePanel.class.getName());
    private static final ResourceBundle BUNDLE =
            ResourceBundle.getBundle("ch/fhnw/lernstickwelcome/Bundle");
    private static final String TEMPLATE =
            "<html><b>{0}</b>{1}<br>{2} - <a href=\"{3}\">"
            + BUNDLE.getString("Website") + "</a></html>";
    private static final String ALREADY_INSTALLED =
            BUNDLE.getString("Already_Installed");
    private String gameName;
    private boolean installed;
    private String description;
    private String website;

    /**
     * Creates new form GamePanel
     */
    public GamePanel() {
        initComponents();
        UIDefaults defaults = UIManager.getDefaults();
        Color backgroundColor = defaults.getColor("Panel.background");
        editorPane.setBackground(backgroundColor);
    }

    public boolean isSelected() {
        return checkBox.isSelected();
    }

    public void setSelected(boolean selected) {
        checkBox.setSelected(selected);
    }

    public void setIcon(Icon icon) {
        label.setIcon(icon);
    }

    public String getGameName() {
        return gameName;
    }

    public void setGameName(String gameName) {
        this.gameName = gameName;
        updateText();
    }

    public boolean isInstalled() {
        return installed;
    }

    public void setInstalled(boolean installed) {
        this.installed = installed;
        if (installed) {
            setSelected(false);
        }
        updateText();
    }

    public void setDescription(String description) {
        this.description = description;
        updateText();
    }

    public void setWebsite(String website) {
        this.website = website;
        updateText();
    }

    private void updateText() {
        editorPane.setText(MessageFormat.format(TEMPLATE, gameName,
                installed ? " (" + ALREADY_INSTALLED + ")" : "",
                description, website));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        checkBox = new javax.swing.JCheckBox();
        label = new javax.swing.JLabel();
        editorPane = new javax.swing.JEditorPane();

        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(checkBox, gridBagConstraints);

        label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelMouseClicked(evt);
            }
        });
        add(label, new java.awt.GridBagConstraints());

        editorPane.setEditable(false);
        editorPane.setContentType("text/html"); // NOI18N
        editorPane.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {
            public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
                editorPaneHyperlinkUpdate(evt);
            }
        });
        add(editorPane, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void editorPaneHyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {//GEN-FIRST:event_editorPaneHyperlinkUpdate
        //Welcome.openLinkInBrowser(evt);
    }//GEN-LAST:event_editorPaneHyperlinkUpdate

    private void labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelMouseClicked
        if (checkBox.isEnabled()) {
            checkBox.setSelected(!checkBox.isSelected());
        }
    }//GEN-LAST:event_labelMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JEditorPane editorPane;
    private javax.swing.JLabel label;
    // End of variables declaration//GEN-END:variables
}
